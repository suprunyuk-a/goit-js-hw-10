{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,MAIPQ,SAASC,cAAc,SAASC,iBAAiB,UAAUC,IACzDA,EAAMC,iBAEN,MAAMC,EAAcL,SAASC,cAAc,kBAAkBK,cACvDC,EAAOP,SAASC,cAAc,iBAAiBK,cAC/CE,EAASR,SAASC,cAAc,mBAAmBK,cAEzD,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAE/BnB,EAAcmB,EAAI,EADNJ,EAAcI,EAAIF,GAE3BG,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MAEjBmB,EAAAvB,GAASwB,OAAOC,QACd,uBAAqBtB,QAAiBC,WAGzCsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAElBmB,EAAAvB,GAASwB,OAAOG,QACd,sBAAoBxB,QAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ndocument.querySelector('.form').addEventListener('submit', event => {\n  event.preventDefault();\n\n  const first_delay = document.querySelector('[name=\"delay\"]').valueAsNumber;\n  const step = document.querySelector('[name=\"step\"]').valueAsNumber;\n  const amount = document.querySelector('[name=\"amount\"]').valueAsNumber;\n\n  for (let i = 0; i < amount; i++) {\n    let delay = first_delay + i * step;\n    createPromise(i + 1, delay)\n      .then(({ position, delay }) => {\n        //console.log(`✅ Fulfilled promise ${position} in ${delay} ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay} ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        //console.log(`❌ Rejected promise ${position} in ${delay} ms`);\n        Notiflix.Notify.warning(\n          `❌ Rejected promise ${position} in ${delay} ms`\n        );\n      });\n  }\n});\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","first_delay","valueAsNumber","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","warning"],"version":3,"file":"03-promises.7453aad3.js.map"}